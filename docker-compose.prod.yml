services:
  db:
    container_name: db
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASS: ${DB_PASSWORD}
    volumes:
      - ./mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    networks:
      - backend
    restart: always

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest    
    environment:
      PMA_HOST: ${DB_HOST}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:80"
    networks:
      - backend
    restart: always

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./api:/app
    environment:
      - DB_USER=${DB_USER}
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
      - frontend
    restart: always

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./client:/app
    depends_on:
      - api
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    networks:
      - frontend
    restart: always

  # nginx:
  #   container_name: nginx
  #   depends_on:
  #     - api
  #     - client
  #   restart: always
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./nginx
  #   ports:
  #     - "80:80"
  #   networks:
  #     - frontend

volumes:
  db_data:

networks:
  backend:
  frontend:
